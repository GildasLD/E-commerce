{
    "info": {
        "_postman_id": "82188f68-b7bf-45d9-9160-afd80f835f34",
        "name": "TEST API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "should create a user",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.environment.set(\"username\", pm.response.json().username);",
                            " ",
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"password\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}api/users",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "users"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Should not create a user",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(500);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"email\": \"{{username}}\",\n    \"password\": \"password\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}api/users",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "users"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Should generate us a token",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.environment.set(\"token\", pm.response.json().token);",
                            " ",
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"password\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}api/login_check",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "login_check"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "should create a demo",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.environment.set(\"lastDemo\", pm.response.json()['id']);",
                            " ",
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"number\": {{$randomInt}},\n  \"name\": \"texte par defaut\",\n  \"description\": \"texte par defaut\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}api/demos",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "demos"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "should edit a demo",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            " ",
                            "pm.test(\"Update Name\", function() {",
                            "    pm.expect(pm.response.json()['name']).to.eql(\"Modification\");",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"number\": 999,\n    \"name\": \"Modification\",\n    \"description\": \"Modification\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{url}}api/demos/{{lastDemo}}",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "demos",
                        "{{lastDemo}}"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "should remove a demo",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status test\", function () {",
                            "    pm.response.to.have.status(204);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{token}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                    "raw": "{{url}}api/demos/{{lastDemo}}",
                    "host": [
                        "{{url}}api"
                    ],
                    "path": [
                        "demos",
                        "{{lastDemo}}"
                    ]
                }
            },
            "response": []
        }
    ]
}